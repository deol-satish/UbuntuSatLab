------------------------------------------------------------------------------------------
For Ubuntu VMware Network Editor to work - shutdown -r now 
-> then copy paste network commmands right after the start
------------------------------------------------------------------------------------------
# To Killall background Bash Scripts
ps aux | grep '[b]ash' | grep -v $$ | awk '{print $2}' | xargs kill
------------------------------------------------------------------------------------------
#Check available congestion control 
sysctl net.ipv4.tcp_available_congestion_control
Alternatively, you can check the available modules in /proc:
cat /proc/sys/net/ipv4/tcp_available_congestion_control
------------------------------------------------------------------------------------------
# Check current TCP cc
sysctl net.ipv4.tcp_congestion_control
------------------------------------------------------------------------------------------
# Use this to set tcp_congestion_control as cubic
sudo sysctl -w net.ipv4.tcp_congestion_control=cubic
------------------------------------------------------------------------------------------
# Use this to set tcp_congestion_control as reno
sudo sysctl -w net.ipv4.tcp_congestion_control=reno
------------------------------------------------------------------------------------------
sudo modprobe sch_dualpi2


to reset: sudo tc qdisc del dev ens37 root

sudo tc qdisc del dev ens33 root fq_codel
# 1. Clear existing qdisc
sudo tc qdisc del dev ens37 root

# 2. Add netem for 10ms delay
sudo tc qdisc add dev ens37 root handle 1: netem delay 15ms

# 3. Add TBF to limit bandwidth to 8Mbps
sudo tc qdisc add dev ens37 parent 1: handle 2: tbf rate 150mbit burst 16kbit latency 100ms

# 4. Attach dualpi2 AQM under TBF
sudo tc qdisc add dev ens37 parent 2:1 handle 3: dualpi2


------

sudo tc qdisc del dev ens37 root  
sudo tc qdisc replace dev ens37 root handle 1: htb default 3  
sudo tc class add dev ens37 parent 1: classid 1:3 htb rate 10mbit  
sudo tc qdisc add dev ens37 parent 1:3 handle 3: bfifo limit 375000



sudo tc qdisc del dev ens37 root  
sudo tc qdisc replace dev ens37 root handle 1: htb default 3  
sudo tc class add dev ens37 parent 1: classid 1:3 htb rate 10mbit  
sudo tc qdisc add dev ens37 parent 1:3 handle 3: bfifo limit 375000



============================================================================================================
# 1. Clear existing qdisc
sudo tc qdisc del dev ens38 root

# 2. Add netem for 10ms delay
sudo tc qdisc add dev ens38 root handle 1: netem delay 0ms

# 3. Add TBF to limit bandwidth to 8Mbps
sudo tc qdisc add dev ens38 parent 1: handle 2: tbf rate 50mbit burst 32kbit latency 100ms

# 4. Attach dualpi2 AQM under TBF
sudo tc qdisc add dev ens38 parent 2:1 handle 3: dualpi2
=============================================================================================

# 1. Clear existing qdisc
sudo tc qdisc del dev ens38 root

# 2. Add HTB root qdisc
sudo tc qdisc add dev ens38 root handle 1: htb default 10

# 3. Create an HTB class to shape traffic at 1 Mbit/s
sudo tc class add dev ens38 parent 1: classid 1:10 htb rate 8mbit ceil 8mbit

# 4. Attach fq_codel as the leaf qdisc under the class
sudo tc qdisc add dev ens38 parent 1:10 handle 100: fq_codel
========================================================================================================




# Delete existing qdisc
sudo tc qdisc del dev ens38 root

# Add netem with delay
sudo tc qdisc add dev ens38 root handle 1: netem delay 5ms

# Attach dualpi2 under netem
sudo tc qdisc add dev ens38 parent 1:1 handle 2: dualpi2









# 1. Delete any existing qdisc
sudo tc qdisc del dev ens38 root

# 2. Add a Token Bucket Filter (TBF) to rate limit to 8 Mbps
sudo tc qdisc add dev ens38 root handle 1: tbf rate 150mbit burst 32kbit latency 100ms

# 3. Attach dualpi2 under TBF
sudo tc qdisc add dev ens38 parent 1:1 handle 2: dualpi2


-----


sudo tc qdisc add dev ens33 root dualpi2


show dualpi2 parameters: tc -s qdisc show dev ens37

tc -s qdisc show dev ens37






sudo tc qdisc del dev ens33 root dualpi2
# 1. Clear existing qdisc
sudo tc qdisc del dev ens37 root

# 2. Add netem for 10ms delay
sudo tc qdisc add dev ens37 root handle 1: netem delay 0ms

# 3. Add TBF to limit bandwidth to 8Mbps
sudo tc qdisc add dev ens37 parent 1: handle 2: tbf rate 80mbit burst 32kbit latency 10ms

# 4. Attach dualpi2 AQM under TBF
sudo tc qdisc add dev ens37 parent 2:1 handle 3: dualpi2





# 1. Delete any existing qdisc
sudo tc qdisc del dev ens37 root

# 2. Add HTB root qdisc
sudo tc qdisc add dev ens37 root handle 1: htb default 10

# 3. Add a class under HTB with 59mbit rate limit
sudo tc class add dev ens37 parent 1: classid 1:10 htb rate 59mbit ceil 59mbit

# 4. Add fq_codel as the qdisc for that class
sudo tc qdisc add dev ens37 parent 1:10 handle 10: fq_codel




# 1. Delete any existing qdisc
sudo tc qdisc del dev ens37 root

# 2. Add HTB root qdisc
sudo tc qdisc add dev ens37 root handle 1: htb default 10

# 3. Add a class under HTB with 59mbit rate limit
sudo tc class add dev ens37 parent 1: classid 1:10 htb rate 120mbit ceil 120mbit

# 4. Add fq_codel as the qdisc for that class
sudo tc qdisc add dev ens37 parent 1:10 handle 10: fq_codel



------------------------------------------------------------------------------------------
find ./ -type f -exec dos2unix {} \;
------------------------------------------------------------------------------------------
sudo tc qdisc add dev ens33 root dualpi2

sudo tc qdisc del dev ens33 root dualpi2



sudo tc qdisc add dev ens33 root fqcodel
Error: Specified qdisc kind is unknown.
sudo tc qdisc add dev ens33 root fq_codel

sudo tc qdisc del dev ens33 root fq_codel


sudo modprobe -r sch_dualpi2
sudo insmod sch_dualpi2.ko



in client1: add sudo ip route add 192.168.2.0/24 via 192.168.1.1 dev ens37


Working server:
stdbuf -oL ./udp_prague/udp_prague_receiver -p 5106 > udp_prague_receiver_iperf3_d120.json

working client 
./udp_prague_sender -a 192.168.2.2 -p 5106 -c